AWSTemplateFormatVersion: "2010-09-09"
Description: >-
    This CloudFormation template creates an ECS cluster and an Application Load
    Balancer, in an existing VPC across 2 Availability
    Zones.  Expects to be run on top of the Amazon VPC Architecture Quick Start
    (https://aws.amazon.com/quickstart/architecture/vpc/). In particular,
    expects there to be an existing CloudFormation stack, which exports some
    outputs, that this template can import.
Parameters:
    VPCID:
        Type: AWS::EC2::VPC::Id
        Description: The ID of the VPC in which to create the ECS Cluster.
    SubnetIDs:
        Type: List<AWS::EC2::Subnet::Id>
        Description: IDs of 2 (private) subnets in which to launch the ECS Cluster.
    LoadBalancerSecurityGroupID:
        Type: AWS::EC2::SecurityGroup::Id
        Description: The SG (of the Load Balancer) from which the Cluster will accept all connections.
    KeyPairName:
        Type: AWS::EC2::KeyPair::KeyName
        Description: Name of an existing EC2 keypair to allow SSH access to ECS instances.
    ECSInstanceType:
        Type: String
        Default: t2.micro
        Description: EC2 instance type to use for ECS container intances.
        AllowedValues: [t2.micro,t2.small,t2.medium]
        ConstraintDescription: Please choose one of the allowed instances types.
    DesiredCapacity:
        Type: Number
        Default: 1
        Description: Number of ECS container instances to launch.
    MaxCapacity:
        Type: Number
        Default: 10
        Description: Maxmimum number of ECS container instances that can be launched in your cluster.
Mappings:
    AWSRegionToECSAMI:
        us-east-1:
            AMIID: ami-fad25980
        us-east-2:
            AMIID: ami-58f5db3d
        us-west-1:
            AMIID: ami-62e0d802
        us-west-2:
            AMIID: ami-7114c909
        eu-west-1:
            AMIID: ami-a1491ad2
        eu-central-1:
            AMIID: ami-05991b6a
        ap-northeast-1:
            AMIID: ami-7267c01c
        ap-southeast-1:
            AMIID: ami-1bdc8b78
        ap-southeast-2:
            AMIID: ami-14b55f76
Resources:
    ECSCluster:
        Type: AWS::ECS::Cluster
    ECSSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPCID
            GroupDescription: !Sub ${ECSCluster} ECS SecurityGroup
            SecurityGroupIngress:
                - Description: Allow access to all ports from ALB Security Group
                  IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  SourceSecurityGroupId: !Ref LoadBalancerSecurityGroupID
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-ECS
    ECSLaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId: !FindInMap [AWSRegionToECSAMI, !Ref 'AWS::Region', AMIID]
            InstanceType: !Ref ECSInstanceType
            KeyName: !Ref KeyPairName
            SecurityGroups: [!Ref ECSSecurityGroup]
            IamInstanceProfile: ecsInstanceRole
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash -evx
                    echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
                    echo ECS_ENABLE_CONTAINER_METADATA=true
                    yum install -y aws-cfn-bootstrap
                    /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}
    ECSAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            LaunchConfigurationName: !Ref ECSLaunchConfiguration
            MinSize: '1'
            MaxSize: !Ref MaxCapacity
            DesiredCapacity: !Ref DesiredCapacity
            VPCZoneIdentifier: !Ref SubnetIDs
        CreationPolicy:
            ResourceSignal:
                Timeout: PT15M
        UpdatePolicy:
            AutoScalingReplacingUpdate:
                WillReplace: true
Outputs:
    ECSClusterName:
        Value: !Ref ECSCluster
        Description: Name of the ECS Cluster
        Export:
            Name: !Sub ${AWS::StackName}-ECSClusterName
    ECSClusterArn:
        Value: !GetAtt ECSCluster.Arn
        Description: ECS Cluster Arn
        Export:
            Name: !Sub ${AWS::StackName}-ECSClusterArn
    ECSSecurityGroupID:
        Value: !GetAtt ECSSecurityGroup.GroupId
        Description: ECS Cluster Security Group ID
        Export:
            Name: !Sub ${AWS::StackName}-ECSSecurityGroupID
    ECSLaunchConfigurationName:
        Value: !Ref ECSLaunchConfiguration
        Description: Name of the Auto-Scaling Launch Configuration used by the ECS cluster auto-scaling group.
        Export:
            Name: !Sub ${AWS::StackName}-ECSLaunchConfigurationName
    ECSAutoScalingGroupName:
        Value: !Ref ECSAutoScalingGroup
        Description: Name of the Auto-Scaling Group used to create the ECS cluster.
        Export:
            Name: !Sub ${AWS::StackName}-ECSAutoScalingGroupName

